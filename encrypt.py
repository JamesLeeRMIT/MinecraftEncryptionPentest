from Crypto.PublicKey import RSA
from Crypto.Random import get_random_bytes
from Crypto.Cipher import AES, PKCS1_OAEP

#Code used from the pyCryptodome documentation examples

message = "I am a secret message".encode("ascii")

file_out = open("encrypted_data.bin", "wb")

recipient_key = RSA.import_key(open("receiver.pem").read())
session_key = get_random_bytes(16)

# Encrypt the session key with the public RSA key
cipher_rsa = PKCS1_OAEP.new(recipient_key)
enc_session_key = cipher_rsa.encrypt(session_key)

# Encrypt the data with the AES session key
cipher_aes = AES.new(session_key, AES.MODE_EAX)
ciphertext, tag = cipher_aes.encrypt_and_digest(message)
[ file_out.write(x) for x in (enc_session_key, cipher_aes.nonce, tag, ciphertext) ]
file_out.close()

#Start sending the message, starts by re-opening the data.bin file
file_in = open("encrypted_data.bin", "rb")
encryptedMessage = file_in.read()

#Sends to the minecraft server through a "post to chat" command
mc = minecraft.Minecraft.create("127.0.0.1", 4710)
mc.postToChat(encryptedMessage)