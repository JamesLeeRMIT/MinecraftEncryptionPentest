from Crypto.PublicKey import RSA
from Crypto.Random import get_random_bytes
from Crypto.Cipher import AES, PKCS1_OAEP
import hashlib

hmacKey = "SecretKey"

#Code for encrypting used from the pyCryptodome documentation examples
#Code for HMAC used from https://coderzcolumn.com/tutorials/python/hmac-hash-based-message-authentication-code-using-python examples

'''
Team Student IDs:
Benjamin Rycroft s3947135
James Lee s3944203
Rita Lam Cordeiro s3947881
Chris Lamb s3945643

Secret message: 35038143
'''
supplyModulus = 1417
message = "35038143"
for 
print(message)
fileOut = open("encrypted_data.bin", "wb")
recipientKey = open("receiver.pem").read()



#Start sending the message, starts by re-opening the data.bin file
file_in = open("encrypted_data.bin", "rb")
encryptedMessage = file_in.read()

#messageHMac = hmac.new(key=key.encode("ascii"), msg=encryptedMessage, digestmod="sha1")
#messageHMacDigest = messageHMac.digest()

#Sends to the minecraft server through a "post to chat" command
#mc = minecraft.Minecraft.create("127.0.0.1", 4710)
#encryptedMessage = encryptedMessage + messageHMacDigest
#mc.postToChat(encryptedMessage)